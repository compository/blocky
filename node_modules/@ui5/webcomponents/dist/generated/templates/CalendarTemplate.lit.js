
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<div class="${classMap(context.classes.main)}" style="${styleMap(context.styles.main)} " @keydown=${context._onkeydown} @focusout=${context._onfocusout}><ui5-calendar-header id="${ifDefined(context._id)}-head" month-text="${ifDefined(context._header.monthText)}" year-text="${ifDefined(context._header.yearText)}" .primaryCalendarType="${ifDefined(context._oMonth.primaryCalendarType)}" @ui5-previous-press="${ifDefined(context._header.onPressPrevious)}" @ui5-next-press="${ifDefined(context._header.onPressNext)}" @ui5-show-month-press="${ifDefined(context._header.onBtn1Press)}" @ui5-show-year-press="${ifDefined(context._header.onBtn2Press)}" ._isNextButtonDisabled="${ifDefined(context._header._isNextButtonDisabled)}" ._isPrevButtonDisabled="${ifDefined(context._header._isPrevButtonDisabled)}" ._isMonthButtonHidden="${ifDefined(context._header._isMonthButtonHidden)}" ._tabIndex="${ifDefined(context._header.tabIndex)}"></ui5-calendar-header><div id="${ifDefined(context._id)}-content"><ui5-daypicker id="${ifDefined(context._id)}-daypicker" class="${classMap(context.classes.dayPicker)}" format-pattern="${ifDefined(context._oMonth.formatPattern)}" .selectedDates="${ifDefined(context._oMonth.selectedDates)}" ._hidden="${ifDefined(context._oMonth._hidden)}" .primaryCalendarType="${ifDefined(context._oMonth.primaryCalendarType)}" .selection="${ifDefined(context._oMonth.selection)}" .minDate="${ifDefined(context._oMonth.minDate)}" .maxDate="${ifDefined(context._oMonth.maxDate)}" timestamp="${ifDefined(context._oMonth.timestamp)}" @ui5-change="${ifDefined(context._oMonth.onSelectedDatesChange)}" @ui5-navigate="${ifDefined(context._oMonth.onNavigate)}" ?hide-week-numbers="${context.hideWeekNumbers}"></ui5-daypicker><ui5-monthpicker id="${ifDefined(context._id)}-MP" class="${classMap(context.classes.monthPicker)}" format-pattern="${ifDefined(context._oMonth.formatPattern)}" ._hidden="${ifDefined(context._monthPicker._hidden)}" .primaryCalendarType="${ifDefined(context._oMonth.primaryCalendarType)}" .minDate="${ifDefined(context._oMonth.minDate)}" .maxDate="${ifDefined(context._oMonth.maxDate)}" timestamp="${ifDefined(context._monthPicker.timestamp)}" @ui5-change="${ifDefined(context._monthPicker.onSelectedMonthChange)}" @ui5-navigate="${ifDefined(context._monthPicker.onNavigate)}"></ui5-monthpicker><ui5-yearpicker id="${ifDefined(context._id)}-YP" class="${classMap(context.classes.yearPicker)}" format-pattern="${ifDefined(context._oMonth.formatPattern)}" ._hidden="${ifDefined(context._yearPicker._hidden)}" .primaryCalendarType="${ifDefined(context._oMonth.primaryCalendarType)}" .minDate="${ifDefined(context._oMonth.minDate)}" .maxDate="${ifDefined(context._oMonth.maxDate)}" timestamp="${ifDefined(context._yearPicker.timestamp)}" ._selectedYear="${ifDefined(context._yearPicker._selectedYear)}" @ui5-change="${ifDefined(context._yearPicker.onSelectedYearChange)}" @ui5-navigate="${ifDefined(context._yearPicker.onNavigate)}"></ui5-yearpicker></div></div>`; };


const main = (context, tags, suffix) => {
	setTags(tags);
	setSuffix(suffix);
	return block0(context);
};
 
export default main;