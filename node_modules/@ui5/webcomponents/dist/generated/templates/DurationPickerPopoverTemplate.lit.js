
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<ui5-responsive-popover allow-target-overlap="${ifDefined(context._respPopover.allowTargetOverlap)}" placement-type="${ifDefined(context._respPopover.placementType)}" _hide-header no-arrow no-stretch horizontal-align="${ifDefined(context._respPopover.horizontalAlign)}" stay-open-on-scroll="${ifDefined(context._respPopover.stayOpenOnScroll)}" @ui5-after-close="${ifDefined(context._respPopover._onAfterClose)}" @keydown="${context._handleKeysDown}"><div class="${classMap(context.classes.container)}" @keydown="${context._handleContainerKeysDown}">${ !context.hideHours ? block1(context) : undefined }${ !context.hideMinutes ? block2(context) : undefined }${ !context.hideSeconds ? block3(context) : undefined }</div><div slot="footer" class="ui5-duration-picker-footer" @keydown=${context._onfooterkeydown}><ui5-button id="submit" design="Emphasized" @click="${context.submitPickers}">${ifDefined(context.submitButtonLabel)}</ui5-button><ui5-button id="close" design="Transparent" @click="${context.togglePicker}">${ifDefined(context.cancelButtonLabel)}</ui5-button></div></ui5-responsive-popover>`; };
const block1 = (context) => { return html`<ui5-wheelslider cyclic="true" ._items="${ifDefined(context.hoursArray)}" value="${ifDefined(context.selectedHours)}" class="ui5-duration-picker-wheelslider ui5-duration-picker-hours-wheelslider" label = "${ifDefined(context.hoursSliderTitle)}"></ui5-wheelslider>`; };
const block2 = (context) => { return html`<ui5-wheelslider cyclic="true" ._items="${ifDefined(context.minutesArray)}" value="${ifDefined(context.selectedMinutes)}" class="ui5-duration-picker-wheelslider ui5-duration-picker-minutes-wheelslider" label = "${ifDefined(context.minutesSliderTitle)}"></ui5-wheelslider>`; };
const block3 = (context) => { return html`<ui5-wheelslider cyclic="true" ._items="${ifDefined(context.secondsArray)}" value="${ifDefined(context.selectedSeconds)}" class="ui5-duration-picker-wheelslider ui5-duration-picker-seconds-wheelslider" label = "${ifDefined(context.secondsSliderTitle)}"></ui5-wheelslider>`; };


const main = (context, tags, suffix) => {
	setTags(tags);
	setSuffix(suffix);
	return block0(context);
};
 
export default main;