
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<div class="ui5-select-root" dir="${ifDefined(context.effectiveDir)}" tabindex="${ifDefined(context.tabIndex)}" id="${ifDefined(context._id)}-select" role="button" aria-haspopup="listbox" aria-label="${ifDefined(context.ariaLabelText)}" aria-labelledby="${ifDefined(context._id)}-label" aria-describedby="${ifDefined(context.valueStateTextId)}" aria-disabled="${ifDefined(context.isDisabled)}" aria-required="${ifDefined(context.required)}" aria-expanded="${ifDefined(context._isPickerOpen)}" @keydown="${context._onkeydown}" @keyup="${context._onkeyup}" @focusin="${context._onfocusin}" @focusout="${context._onfocusout}" @click="${context._toggleRespPopover}"><div class="ui5-select-label-root"><ui5-label id="${ifDefined(context._id)}-label" for="${ifDefined(context._id)}-select">${ifDefined(context._text)}</ui5-label></div><ui5-icon name="slim-arrow-down" input-icon ?pressed="${context._iconPressed}" dir="${ifDefined(context.effectiveDir)}"></ui5-icon>${ context.hasValueState ? block1(context) : undefined }<slot name="formSupport"></slot></div>`; };
const block1 = (context) => { return html`<span id="${ifDefined(context._id)}-valueStateDesc" class="ui5-hidden-text">${ifDefined(context.valueStateText)}</span>`; };


const main = (context, tags, suffix) => {
	setTags(tags);
	setSuffix(suffix);
	return block0(context);
};
 
export default main;