{"version":3,"file":"hod-create-profile-form.js","sourceRoot":"","sources":["../../src/elements/hod-create-profile-form.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, query, property } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\n\nimport { TextField } from 'scoped-material-components/mwc-textfield';\nimport { Button } from 'scoped-material-components/mwc-button';\nimport { IconButton } from 'scoped-material-components/mwc-icon-button';\nimport Avatar from '@ui5/webcomponents/dist/Avatar';\n\nimport { sharedStyles } from '../sharedStyles';\nimport { BaseElement } from './base-element';\nimport { Dictionary } from '../types';\n\n/**\n * @element hod-create-profile-form\n * @fires profile-created - after the profile has been created\n */\nexport class HodCreateProfileForm extends BaseElement {\n  /** Public attributes */\n\n  /**\n   * Minimum length that the nickname needs to have\n   * @attr min-length\n   */\n  @property({ type: Number, attribute: 'min-length' })\n  minLength = 3;\n\n  /** Private properties */\n\n  @query('#nickname-field')\n  _nicknameField!: TextField;\n\n  @query('#avatar-file-picker')\n  _avatarFilePicker!: HTMLInputElement;\n\n  _existingUsernames: { [key: string]: boolean } = {};\n\n  @property({ type: String })\n  _avatar: string | undefined = undefined;\n\n  firstUpdated() {\n    this._nicknameField.validityTransform = (newValue: string) => {\n      this.requestUpdate();\n      if (newValue.length < this.minLength) {\n        this._nicknameField.setCustomValidity(\n          `Username is too shot, min. ${this.minLength} characters`\n        );\n        return {\n          valid: false,\n        };\n      } else if (this._existingUsernames[newValue]) {\n        this._nicknameField.setCustomValidity('This nickname already exists');\n        return { valid: false };\n      }\n\n      return {\n        valid: true,\n      };\n    };\n  }\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  async createProfile() {\n    const nickname = this._nicknameField.value;\n\n    try {\n      const fields: Dictionary<string> = {};\n      if (this._avatar) {\n        fields['avatar'] = this._avatar;\n      }\n      await this._profilesService.createProfile({\n        nickname,\n        fields,\n      });\n\n      this.dispatchEvent(\n        new CustomEvent('profile-created', {\n          detail: {\n            profile: {\n              nickname,\n              fields,\n            },\n          },\n          bubbles: true,\n          composed: true,\n        })\n      );\n    } catch (e) {\n      console.log(e);\n      this._existingUsernames[nickname] = true;\n      this._nicknameField.reportValidity();\n    }\n  }\n\n  // Crop the image and return a base64 bytes string of its content\n  cropPlusExport(\n    img: HTMLImageElement,\n    cropX: number,\n    cropY: number,\n    cropWidth: number,\n    cropHeight: number\n  ) {\n    // create a temporary canvas sized to the cropped size\n    const canvas1 = document.createElement('canvas');\n    const ctx1 = canvas1.getContext('2d');\n    canvas1.width = cropWidth;\n    canvas1.height = cropHeight;\n    // use the extended from of drawImage to draw the\n    // cropped area to the temp canvas\n    ctx1?.drawImage(\n      img,\n      cropX,\n      cropY,\n      cropWidth,\n      cropHeight,\n      0,\n      0,\n      cropWidth,\n      cropHeight\n    );\n    // return the .toDataURL of the temp canvas\n    return canvas1.toDataURL();\n  }\n\n  onAvatarUploaded() {\n    if (this._avatarFilePicker.files && this._avatarFilePicker.files[0]) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.onload = () => {\n          this._avatar = this.cropPlusExport(img, 0, 0, 100, 100);\n        };\n        img.src = e.target?.result as string;\n      };\n      reader.readAsDataURL(this._avatarFilePicker.files[0]);\n    }\n  }\n\n  render() {\n    return html`\n      <input\n        type=\"file\"\n        id=\"avatar-file-picker\"\n        style=\"display: none;\"\n        @change=${this.onAvatarUploaded}\n      />\n\n      <div class=\"column\">\n        <div class=\"row center-content\">\n          ${this._avatar\n            ? html`\n                <ui5-avatar\n                  label=\"Avatar\"\n                  image=\"${this._avatar}\"\n                  style=\"margin-bottom: 19px;\"\n                ></ui5-avatar>\n              `\n            : html`\n                <mwc-icon-button\n                  label=\"Add avatar\"\n                  icon=\"add\"\n                  @click=${() => this._avatarFilePicker.click()}\n                >\n                </mwc-icon-button>\n              `}\n\n          <mwc-textfield\n            id=\"nickname-field\"\n            outlined\n            label=\"Username\"\n            @input=${() => this._nicknameField.reportValidity()}\n            style=\"margin-left: 8px;\"\n          ></mwc-textfield>\n        </div>\n        <mwc-button\n          id=\"create-profile-button\"\n          raised\n          class=${classMap({\n            'small-margin': !!this._nicknameField,\n            'big-margin': !this._nicknameField,\n          })}\n          .disabled=${!this._nicknameField ||\n          !this._nicknameField.validity.valid}\n          label=\"CREATE PROFILE\"\n          @click=${() => this.createProfile()}\n        ></mwc-button>\n      </div>\n    `;\n  }\n\n  static get scopedElements() {\n    return {\n      'mwc-textfield': TextField,\n      'mwc-button': Button,\n      'mwc-icon-button': IconButton,\n      'ui5-avatar': Avatar,\n    };\n  }\n}\n"]}