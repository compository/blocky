{"version":3,"file":"base-element.js","sourceRoot":"","sources":["../../src/elements/base-element.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AAEvE,OAAO,EAAE,mBAAmB,IAAI,MAAM,EAAE,MAAM,0BAA0B,CAAC;AACzE,OAAO,EAAe,UAAU,EAAE,MAAM,aAAa,CAAC;AACtD,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEtD,MAAM,OAAO,WAAY,SAAQ,eAAe,CAC9C,MAAM,CAAC,UAAU,CAA4B,CAC9C;IAEC,IAAI,gBAAgB;QAClB,OAAO,IAAI,eAAe,CACxB,IAAI,CAAC,eAAe,CAAC,YAA4B,EACjD,IAAI,CAAC,eAAe,CAAC,MAAgB,CACtC,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { membraneContext } from '@holochain-open-dev/membrane-context';\nimport { AppWebsocket, CellId } from '@holochain/conductor-api';\nimport { ScopedElementsMixin as Scoped } from '@open-wc/scoped-elements';\nimport { Constructor, LitElement } from 'lit-element';\nimport { ProfilesService } from '../profiles.service';\n\nexport class BaseElement extends membraneContext(\n  Scoped(LitElement) as Constructor<LitElement>\n) {\n  \n  get _profilesService(): ProfilesService {\n    return new ProfilesService(\n      this.membraneContext.appWebsocket as AppWebsocket,\n      this.membraneContext.cellId as CellId\n    );\n  }\n}\n"]}