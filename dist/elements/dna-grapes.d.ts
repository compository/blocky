import { Constructor, PropertyValues } from 'lit-element';
import { TopAppBar } from 'scoped-material-components/mwc-top-app-bar';
import { IconButton } from 'scoped-material-components/mwc-icon-button';
import { CompositoryService, ZomeDef } from '@compository/lib';
import { GrapesService } from '../grapes.service';
import { CircularProgress } from 'scoped-material-components/mwc-circular-progress';
import { Button } from 'scoped-material-components/mwc-button';
import { RenderTemplate } from '../types';
import { CellId } from '@holochain/conductor-api';
import { BaseElement } from '@holochain-open-dev/common';
export declare abstract class DnaGrapes extends BaseElement {
    cellId: CellId;
    _profilesZomeExistsInDna: boolean;
    _profileAlreadyCreated: boolean;
    _editing: boolean;
    _loading: boolean;
    _zomeLenses: [ZomeDef, File][];
    _templateToRender: RenderTemplate | undefined;
    abstract get _compositoryService(): CompositoryService;
    get _grapesService(): GrapesService;
    _editor: any | undefined;
    updated(changedValues: PropertyValues): void;
    firstUpdated(): Promise<void>;
    setupRenderIframe(): Promise<void>;
    setupGrapes(): Promise<void>;
    setupIframe(iframe: HTMLIFrameElement): void;
    addRenderTemplateJs(iframe: HTMLIFrameElement): void;
    addZomeLensesToGrapes(zomeDef: ZomeDef, setupLensesFile: File, editor: any): Promise<void>;
    addZomeLensesToIframe(zomeDef: ZomeDef, setupLensesFileText: string, iframe: HTMLIFrameElement): Promise<void>;
    loadRenderTemplate(): Promise<void>;
    loadProfilesExists(): Promise<void>;
    loadRenderers(): Promise<void>;
    showProfilePromt(): boolean;
    renderBarItems(): import("lit-element").TemplateResult;
    renderContent(): import("lit-element").TemplateResult;
    render(): import("lit-element").TemplateResult;
    getScopedElements(): {
        'mwc-top-app-bar': typeof TopAppBar;
        'mwc-icon-button': typeof IconButton;
        'mwc-button': typeof Button;
        'mwc-circular-progress': typeof CircularProgress;
        'create-profile-form': Constructor<HTMLElement>;
    };
    static get styles(): any[];
}
