{"version":3,"file":"blocky-block-board.js","sourceRoot":"","sources":["../../src/elements/blocky-block-board.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, LitElement, property } from 'lit-element';\nimport {\n  CompositoryService,\n  fetchRenderersForAllZomes,\n  StandaloneRenderer,\n} from 'compository';\nimport { Block, BlockBoard, BlockLayoutNode } from 'block-board';\nimport { membraneContext } from 'holochain-membrane-context';\nimport { CellId } from '@holochain/conductor-api';\nimport { Scoped } from 'scoped-elements';\nimport { CircularProgress } from 'scoped-material-components/dist/mwc-circular-progress';\nimport { Fab } from 'scoped-material-components/dist/mwc-fab';\nimport { BlockyService } from '../blocky.service';\n\nexport class BlockyBlockBoard extends membraneContext(Scoped(LitElement)) {\n  @property()\n  compositoryCellId!: CellId;\n\n  static get scopedElements() {\n    return {\n      'block-board': BlockBoard,\n      'mwc-circular-progress': CircularProgress,\n      'mwc-fab': Fab,\n    };\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: flex;\n      }\n      .fab {\n        position: fixed;\n        right: 40px;\n        bottom: 40px;\n      }\n    `;\n  }\n\n  @property({ type: Array })\n  _blocks: Array<Block> | undefined = undefined;\n  @property({ type: Array })\n  _blockLayout: BlockLayoutNode | undefined = undefined;\n\n  get blockyService(): BlockyService {\n    return new BlockyService(this.appWebsocket, this.cellId);\n  }\n  get board(): BlockBoard {\n    return this.shadowRoot?.getElementById('board') as BlockBoard;\n  }\n\n  async firstUpdated() {\n    // Get the renderers for each of the zomes\n    const zomeRenderers = await fetchRenderersForAllZomes(\n      new CompositoryService(this.appWebsocket, this.compositoryCellId),\n      this.cellId\n    );\n\n    const standaloneRenderers = zomeRenderers.map(r => r.renderers.standalone);\n\n    const flattened = ([] as StandaloneRenderer[]).concat(\n      ...standaloneRenderers\n    );\n\n    this._blocks = flattened;\n\n    const layouts = await this.blockyService.getAllBoardLayouts();\n    this._blockLayout = layouts[0];\n  }\n\n  async createBoard(layout: BlockLayoutNode) {\n    this._blockLayout = layout;\n    return this.blockyService.createBoardLayout(layout);\n  }\n\n  render() {\n    if (this._blocks === undefined)\n      return html`<mwc-circular-progress></mwc-circular-progress>`;\n    return html`<block-board\n        id=\"board\"\n        style=\"flex: 1;\"\n        .availableBlocks=${this._blocks}\n        .blockLayout=${this._blockLayout}\n        @board-saved=${(e: CustomEvent) =>\n          this.createBoard(e.detail.blockLayout)}\n      ></block-board>\n      \n      ${this.board?.editing\n        ? html``\n        : html`\n            <mwc-fab label=\"edit\" class=\"fab\">\n              <mwc-icon-button\n                slot=\"icon\"\n                @click=${() => (this.board.editing = true)}\n                >edit</mwc-icon-button\n              >\n            </mwc-fab>\n          `} `;\n  }\n}\n"]}