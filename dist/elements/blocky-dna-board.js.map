{"version":3,"file":"blocky-dna-board.js","sourceRoot":"","sources":["../../src/elements/blocky-dna-board.ts"],"names":[],"mappings":"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","sourcesContent":["import { Constructor, css, html, LitElement, property } from 'lit-element';\nimport { ScopedElementsMixin as Scoped } from '@open-wc/scoped-elements';\nimport {\n  membraneContext,\n  MembraneContextProvider,\n} from '@holochain-open-dev/membrane-context';\nimport { AppWebsocket, CellId } from '@holochain/conductor-api';\nimport { serializeHash } from '@holochain-open-dev/common';\n\nimport { TopAppBar } from 'scoped-material-components/mwc-top-app-bar';\nimport { IconButton } from 'scoped-material-components/mwc-icon-button';\nimport {\n  HodCreateProfileForm,\n  ProfilesService,\n} from '@holochain-open-dev/profiles';\nimport { CompositoryService, fetchLensesForAllZomes } from '@compository/lib';\nimport { sharedStyles } from '../sharedStyles';\nimport { BlockyService } from '../blocky.service';\nimport { BlockBoard, BlockNode, BlockSet } from 'block-board';\nimport { CircularProgress } from 'scoped-material-components/mwc-circular-progress';\nimport { Button } from 'scoped-material-components/mwc-button';\n\nexport class BlockyDnaBoard extends membraneContext(\n  Scoped(LitElement) as Constructor<LitElement>\n) {\n  @property({ type: Array })\n  cellIdToDisplay!: CellId;\n  @property({ type: Array })\n  compositoryCellId!: CellId;\n\n  @property({ type: Boolean })\n  _profilesZomeExistsInDna = false;\n  @property({ type: Boolean })\n  _profileAlreadyCreated = false;\n  @property({ type: Object })\n  _blockNode: BlockNode | undefined = undefined;\n\n  @property({ type: Array })\n  _blockSets: Array<BlockSet> | undefined = undefined;\n\n  @property({ type: Boolean })\n  _editing = false;\n\n  @property({ type: Boolean })\n  _loading = true;\n\n  get board(): BlockBoard {\n    return this.shadowRoot?.getElementById('board') as BlockBoard;\n  }\n\n  get blockyService(): BlockyService {\n    return new BlockyService(\n      this.membraneContext.appWebsocket as AppWebsocket,\n      this.cellIdToDisplay as CellId\n    );\n  }\n  get compositoryService(): CompositoryService {\n    return new CompositoryService(\n      this.membraneContext.appWebsocket as AppWebsocket,\n      this.compositoryCellId as CellId\n    );\n  }\n\n  async firstUpdated() {\n    await this.loadProfilesExists();\n\n    const layouts = await this.blockyService.getAllBoardLayouts();\n    this._blockNode = layouts[0];\n    await this.loadRenderers();\n\n    this._loading = false;\n  }\n\n  async loadProfilesExists() {\n    const dnaTemplate = await this.compositoryService.getTemplateForDna(\n      serializeHash(this.cellIdToDisplay[0])\n    );\n    this._profilesZomeExistsInDna = !!dnaTemplate.dnaTemplate.zome_defs.find(\n      zome => zome.name === 'profiles'\n    );\n\n    if (this._profilesZomeExistsInDna) {\n      const profileService = new ProfilesService(\n        this.membraneContext.appWebsocket as AppWebsocket,\n        this.cellIdToDisplay\n      );\n\n      const myProfile = await profileService.getMyProfile();\n      this._profileAlreadyCreated = !!myProfile;\n    }\n  }\n\n  async loadRenderers() {\n    // Get the renderers for each of the zomes\n    const zomeLenses = await fetchLensesForAllZomes(\n      this.compositoryService,\n      this.cellIdToDisplay\n    );\n\n    this._blockSets = zomeLenses\n      .filter(([def, lenses]) => lenses !== undefined)\n      .map(\n        ([def, lenses]) =>\n          ({\n            name: def.name,\n            blocks: lenses?.standalone.map(s => ({\n              name: s.name,\n              render: (root: ShadowRoot) =>\n                s.render(\n                  root,\n                  this.membraneContext.appWebsocket as AppWebsocket,\n                  this.cellIdToDisplay as CellId\n                ),\n            })),\n          } as BlockSet)\n      );\n\n    this._editing = !this._blockNode;\n  }\n\n  async createBoard(layout: BlockNode) {\n    this._editing = false;\n    if (JSON.stringify(this._blockNode) !== JSON.stringify(layout)) {\n      this._blockNode = layout;\n      await this.blockyService.createBoardNode(layout);\n    }\n  }\n\n  showProfilePromt() {\n    return (\n      !this._loading &&\n      this._profilesZomeExistsInDna &&\n      !this._profileAlreadyCreated\n    );\n  }\n\n  renderBarItems() {\n    if (this._loading || this.showProfilePromt()) return html``;\n    if (!this._editing)\n      return html` <mwc-button\n        icon=\"edit\"\n        slot=\"actionItems\"\n        label=\"Edit Layout\"\n        @click=${() => {\n          this._editing = true;\n        }}\n      ></mwc-button>`;\n    else\n      return html`<mwc-button\n          icon=\"save\"\n          slot=\"actionItems\"\n          label=\"Save Layout\"\n          .disabled=${!this.board || this.board.isEditingLayoutEmpty()}\n          @click=${() => {\n            const newLayout = this.board.save();\n            this.createBoard(newLayout);\n          }}\n        ></mwc-button>\n        ${this._blockNode\n          ? html`\n              <mwc-button\n                icon=\"close\"\n                slot=\"actionItems\"\n                label=\"Cancel\"\n                @click=${() => {\n                  this._editing = false;\n                }}\n              ></mwc-button>\n            `\n          : html``} `;\n  }\n\n  renderContent() {\n    if (this._loading)\n      return html`<div class=\"fill center-content\">\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\n      </div>`;\n    else if (this.showProfilePromt())\n      return html`\n        <div\n          style=\"flex: 1; display: flex; align-items: center; justify-content: center;\"\n        >\n          <hod-create-profile-form\n            @profile-created=${() => (this._profileAlreadyCreated = true)}\n          ></hod-create-profile-form>\n        </div>\n      `;\n    else\n      return html`\n        <block-board\n          id=\"board\"\n          style=\"flex: 1;\"\n          .editing=${this._editing}\n          .blockSets=${this._blockSets}\n          ?blockLayout=${this._blockNode}\n          @layout-updated=${() => this.requestUpdate()}\n        ></block-board>\n      `;\n  }\n\n  render() {\n    return html`<membrane-context-provider\n      .appWebsocket=${this.membraneContext.appWebsocket}\n      .cellId=${this.cellIdToDisplay}\n    >\n      <mwc-top-app-bar style=\"flex: 1; display: flex;\">\n        <mwc-icon-button\n          icon=\"arrow_back\"\n          slot=\"navigationIcon\"\n          @click=${() => this.dispatchEvent(new CustomEvent('navigate-back'))}\n        ></mwc-icon-button>\n        <div slot=\"title\">${serializeHash(this.cellIdToDisplay[0])}</div>\n\n        ${this.renderBarItems()}\n\n        <div style=\"width: 100vw; height: 100%; display: flex;\">\n          ${this.renderContent()}\n        </div>\n      </mwc-top-app-bar>\n    </membrane-context-provider>`;\n  }\n\n  static get scopedElements() {\n    return {\n      'membrane-context-provider': MembraneContextProvider,\n      'block-board': BlockBoard,\n      'mwc-top-app-bar': TopAppBar,\n      'mwc-button': Button,\n      'mwc-icon-button': IconButton,\n      'mwc-circular-progress': CircularProgress,\n      'hod-create-profile-form': HodCreateProfileForm,\n    };\n  }\n\n  static get styles() {\n    return [\n      sharedStyles,\n      css`\n        :host {\n          display: flex;\n        }\n      `,\n    ];\n  }\n}\n"]}